function [MonocularEye2, MonocularEye3] = findMonocularTrials(STIM)
% Pull trials from STIM
% Exports logical vectors

%ipsi: eye = 2
MonocularEye2 =  ~STIM.blank & ...
    STIM.eye        == 2 &...
    STIM.adapter   == 0 & ...  
    STIM.suppressor == 0 & ...
    STIM.soa        == 0 & ...
    STIM.monocular  == 1;

%contra: eye = 3
MonocularEye3  =  ~STIM.blank & ...
    STIM.eye        == 3 &...
    STIM.adapter   == 0 & ...  
    STIM.suppressor == 0 & ...
    STIM.soa        == 0 & ...
    STIM.monocular  == 1;


% If you only wanted ignore certain tasks you could use additional inputs
% for STIM.task - i.e. 

% % %ipsi: eye = 2
% % MonocularEye2 =  ~STIM.blank & ...
% %     ~strcmp(STIM.task,'rfori') &...
% %     ~strcmp(STIM.task,'mcosinteroc') &...
% %     STIM.eye        == 2 &...
% %     STIM.adapter   == 0 & ...  
% %     STIM.suppressor == 0 & ...
% %     STIM.soa        == 0 & ...
% %     STIM.monocular  == 1;
% % 
% % %contra: eye = 3
% % MonocularEye3  =  ~STIM.blank & ...
% %     ~strcmp(STIM.task,'rfori') &...
% %     ~strcmp(STIM.task,'mcosinteroc') &...
% %     STIM.eye        == 3 &...
% %     STIM.adapter   == 0 & ...  
% %     STIM.suppressor == 0 & ...
% %     STIM.soa        == 0 & ...
% %     STIM.monocular  == 1;


end